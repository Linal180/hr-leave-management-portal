{"ast":null,"code":"import axios from 'axios';\nimport { API_CONFIG, STORAGE_KEYS } from '../constants';\nclass ApiService {\n  constructor() {\n    this.api = void 0;\n    this.api = axios.create({\n      baseURL: API_CONFIG.BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor for error handling\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Token expired or invalid\n        localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n        localStorage.removeItem(STORAGE_KEYS.USER_DATA);\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  // Auth endpoints\n  async login(credentials) {\n    const response = await this.api.post(API_CONFIG.ENDPOINTS.AUTH.LOGIN, credentials);\n    return response.data.data;\n  }\n  async getProfile() {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.AUTH.PROFILE);\n    return response.data.data;\n  }\n  async getAllUsers() {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.AUTH.USERS);\n    return response.data.data;\n  }\n\n  // Leave endpoints\n  async applyForLeave(leaveData) {\n    const response = await this.api.post(API_CONFIG.ENDPOINTS.LEAVE.APPLY, leaveData);\n    return response.data.data;\n  }\n  async getPendingLeaveRequests() {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.LEAVE.PENDING);\n    return response.data.data;\n  }\n  async getMyLeaveRequests() {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.LEAVE.MY_REQUESTS);\n    return response.data.data;\n  }\n  async getAllLeaveRequests() {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.LEAVE.ALL);\n    return response.data.data;\n  }\n  async approveOrRejectLeave(requestId, approvalData) {\n    const response = await this.api.post(`${API_CONFIG.ENDPOINTS.LEAVE.APPROVE}/${requestId}`, approvalData);\n    return response.data.data;\n  }\n  async getMonthlySummary(year, month) {\n    const response = await this.api.get(API_CONFIG.ENDPOINTS.LEAVE.SUMMARY, {\n      params: {\n        year,\n        month\n      }\n    });\n    return response.data.data;\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","API_CONFIG","STORAGE_KEYS","ApiService","constructor","api","create","baseURL","BASE_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","AUTH_TOKEN","Authorization","error","Promise","reject","response","_error$response","status","removeItem","USER_DATA","window","location","href","login","credentials","post","ENDPOINTS","AUTH","LOGIN","data","getProfile","get","PROFILE","getAllUsers","USERS","applyForLeave","leaveData","LEAVE","APPLY","getPendingLeaveRequests","PENDING","getMyLeaveRequests","MY_REQUESTS","getAllLeaveRequests","ALL","approveOrRejectLeave","requestId","approvalData","APPROVE","getMonthlySummary","year","month","SUMMARY","params"],"sources":["/home/dev/Projects/Screening-Test/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { API_CONFIG, STORAGE_KEYS } from '../constants';\nimport { \n  LoginRequest, \n  LoginResponse, \n  LeaveApplicationRequest, \n  LeaveApprovalRequest,\n  ApiResponse,\n  LeaveRequest,\n  LeaveRequestWithEmployee,\n  User,\n  MonthlySummary\n} from '../types';\n\nclass ApiService {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_CONFIG.BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Response interceptor for error handling\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          // Token expired or invalid\n          localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n          localStorage.removeItem(STORAGE_KEYS.USER_DATA);\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // Auth endpoints\n  async login(credentials: LoginRequest): Promise<LoginResponse> {\n    const response: AxiosResponse<ApiResponse<LoginResponse>> = await this.api.post(\n      API_CONFIG.ENDPOINTS.AUTH.LOGIN,\n      credentials\n    );\n    return response.data.data!;\n  }\n\n  async getProfile(): Promise<User> {\n    const response: AxiosResponse<ApiResponse<User>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.AUTH.PROFILE\n    );\n    return response.data.data!;\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    const response: AxiosResponse<ApiResponse<User[]>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.AUTH.USERS\n    );\n    return response.data.data!;\n  }\n\n  // Leave endpoints\n  async applyForLeave(leaveData: LeaveApplicationRequest): Promise<LeaveRequest> {\n    const response: AxiosResponse<ApiResponse<LeaveRequest>> = await this.api.post(\n      API_CONFIG.ENDPOINTS.LEAVE.APPLY,\n      leaveData\n    );\n    return response.data.data!;\n  }\n\n  async getPendingLeaveRequests(): Promise<LeaveRequestWithEmployee[]> {\n    const response: AxiosResponse<ApiResponse<LeaveRequestWithEmployee[]>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.LEAVE.PENDING\n    );\n    return response.data.data!;\n  }\n\n  async getMyLeaveRequests(): Promise<LeaveRequest[]> {\n    const response: AxiosResponse<ApiResponse<LeaveRequest[]>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.LEAVE.MY_REQUESTS\n    );\n    return response.data.data!;\n  }\n\n  async getAllLeaveRequests(): Promise<LeaveRequestWithEmployee[]> {\n    const response: AxiosResponse<ApiResponse<LeaveRequestWithEmployee[]>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.LEAVE.ALL\n    );\n    return response.data.data!;\n  }\n\n  async approveOrRejectLeave(\n    requestId: string, \n    approvalData: LeaveApprovalRequest\n  ): Promise<LeaveRequest> {\n    const response: AxiosResponse<ApiResponse<LeaveRequest>> = await this.api.post(\n      `${API_CONFIG.ENDPOINTS.LEAVE.APPROVE}/${requestId}`,\n      approvalData\n    );\n    return response.data.data!;\n  }\n\n  async getMonthlySummary(year: number, month: number): Promise<MonthlySummary> {\n    const response: AxiosResponse<ApiResponse<MonthlySummary>> = await this.api.get(\n      API_CONFIG.ENDPOINTS.LEAVE.SUMMARY,\n      {\n        params: { year, month }\n      }\n    );\n    return response.data.data!;\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}